{"version":3,"sources":["kensho.js"],"names":["Kensho","formElement","option","isInitialize","init","instanceList","undefined","push","document","querySelector","rule","plugin","Object","create","classPlugin","hook","Hook","_","Map","set","defineProperty","enumerable","get","inputs","length","key","_list","class","cb","callback","param","call","instance","classList","add","action","inputElement","errorElement","event","querySelectorAll","Array","isArray","name","getAttribute","tagName","toLowerCase","type","_rule","errorMessage","unit","inputTagName","error","filter","forEach","i","input","validate","addEventListener","value","check","applyRules","verbose","config","innerHTML","result","_c","lang","errorMessageWrapper","val","_k","map","_get","self","actions","filters","hookName","callbackName","priority","hooks","newHook","splice","remove","typeName","thisObject","listener","data","ruleBook","dependency","scope","console","initialized","trim","arrow2byte","log","byte_2to1","addMap","_userMaps"],"mappings":"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","file":"kensho.js","sourcesContent":["class Kensho{\n\n/**\n *\n * @param  {string|HTMLElement} formElement             - \n * @param  {object}             [option={}]             - \n * @param  {string}             [option.errorWrap=span] - \n * @return {Kensho}\n */\nconstructor(formElement, option = {}){\n  if(Kensho.isInitialize) Kensho.init();\n\n  if(Kensho.instanceList === undefined) Kensho.instanceList = [this];\n  else Kensho.instanceList.push(this);\n\n  formElement = typeof formElement === 'string' ? document.querySelector(formElement) : formElement;\n\n  this.formElement = formElement;\n  this.rule        = Kensho.rule;\n  this.plugin      = Object.create(null);\n  this.classPlugin = Kensho.plugin;\n  this.hook        = new Kensho.Hook();\n\n  // soft private\n  this._ = new Map();\n  this._.set(this, Object.create(null));\n  Object.defineProperty(this, '_', { enumerable : false });\n  let _ = this._.get(this);\n  _.inputs = {};\n\n  // plugin setup\n  if(Kensho.instanceList.length === 1){\n    for(let key in Kensho.plugin._list.class){\n      let cb    = Kensho.plugin._list.class[key].callback;\n      let param = Kensho.plugin._list.class[key].param;\n      Kensho.plugin[key] = cb.call(Kensho, param);\n    }\n  };\n  for(let key in Kensho.plugin._list.instance){\n    let cb    = Kensho.plugin._list.instance[key].callback;\n    let param = Kensho.plugin._list.instance[key].param;\n    this.plugin[key] = cb.call(this, param);\n  }\n\n  formElement.classList.add('kensho-form');\n\n  this.hook.action('init', {}, this);\n}\n\n\n\n\n// Kensho.addRule\n\n/**\n * \n * Add validation field.\n *\n * About of [event=['']] param.\n * it fundamentally set event.type name.\n * but, it has especial names, as follows.\n *   init - when in add() method\n * \n * @param {string|HTMLElement|array<HTMLElement>} inputElement - Form input HTML element or its CSS selector string.\n * @param {string|HTMLElement}                    errorElement - Wrapper element of output error message or its CSS selector string.\n * @param {object}                                rule         - The key is rule name. The value is error message.\n * @param {string|<string>}                       [event=['']] - trigger event.\n * @return {Kensho} this\n */\nadd(inputElement, errorElement, rule, event = [''], param = {}){\n\n  // for example, name attribute of radio buttons are seted same value.\n  // querySelector return matched first HTML element and 2nd and subsequent matched element is ignored.\n  // so, InputElement not use querySelector but use querySelectorAll.\n  // as a result of it, inputElement type is a array.\n  inputElement = typeof inputElement === 'string' ? document.querySelectorAll(inputElement) : Array.isArray(inputElement) ? inputElement : [inputElement];\n  errorElement = typeof errorElement === 'string' ? document.querySelector(errorElement) : errorElement;\n  event        = typeof event        === 'string' ? [event] : event;\n\n  let _       = this._.get(this);\n  let name    = inputElement[0].getAttribute('name');\n  let tagName = inputElement[0].tagName.toLowerCase();\n  let type    = null;\n  if(tagName === 'input') type = inputElement[0].getAttribute('type');\n  else type = tagName;\n  if(type !== 'radio') inputElement = inputElement[0];\n\n  let _rule = {};\n  for(let key in rule){\n    if(typeof rule[key] === 'string'){\n      _rule[key] = {\n        param        : {},\n        errorMessage : rule[key]\n      };\n    }else{\n      _rule[key] = rule[key];\n    }\n  }\n  rule = _rule;\n\n  let unit = {\n    name         : name,\n    inputElement : inputElement,\n    errorElement : errorElement,\n    inputTagName : tagName,\n    type         : type,\n    rule         : rule,\n    error        : []\n  }\n\n  unit = this.hook.filter('validate-filed', unit, this);\n  _.inputs[name] = unit;\n\n  // Add event handler\n  event.forEach((name, i)=>{\n    if(name === 'init'){\n      if(unit.type === 'radio'){\n        unit.inputElement.forEach((input, i)=>{\n          this.validate(unit.name);\n        });\n      }else{\n        this.validate(unit.name);\n      }\n    }else{\n      if(unit.type === 'radio'){\n        unit.inputElement.forEach((input, i)=>{\n          input.addEventListener(name, ()=>{\n            this.validate(unit.name);\n          });\n        });\n      }else{\n        unit.inputElement.addEventListener(name, ()=>{\n          this.validate(unit.name);\n        });\n      }\n    }\n  });\n\n  this.hook.action('set-validate-field', {unit : unit}, this);\n  return this;\n}\n\n/**\n * \n * validate value\n * \n * @param  {string}     name  - validation rule name.\n * @param  {string|int} value - \n * @param  {object}     param - key/value variables for callback\n * @return {boolean}\n */\nstatic validate(name, value, param = {}){\n  let rule = this.rule.get(name);\n  return rule.check(value, param);\n}\n\n/**\n *\n *\n * @name   {string}\n * @name   {param}\n * @return {kensho} this\n */\nvalidate(name, param = {}){\n  let _          = this._.get(this);\n  let unit       = _.inputs[name];\n  let applyRules = unit.rule;\n  let verbose    = Kensho.config.get('verbose');\n\n  if(unit.type === 'text'){\n    value = unit.inputElement.value;\n  }else{\n    value = this.formElement[unit.name] ? this.formElement[unit.name] : value;\n  }\n  if(unit.type === 'textarea'){\n    // console.log();\n  }\n  \n  unit.errorElement.innerHTML = '';\n  unit.error                  = [];\n\n  value = this.hook.filter('pre-validate-value', value, this);\n\n  for(let key in applyRules){\n    let result = Kensho.validate(key, value, applyRules[key].param);\n  }\n  // for(let i = 0, l = rule.length; i < l; i++){\n  //   \n  // }\n  // console.log(value);\n\n\n  return this;\n}\n\n}\n\n(()=>{\n  let _c = {};\n  // ===========================================================================\n  // \n  // DEFAULT CONFIGURATIONS.\n  // \n  // ===========================================================================\n  _c.lang                = 'en'; // language\n  _c.errorMessageWrapper = 'li';\n  _c.verbose             = true; // \n\n  Kensho.config = {\n    /**\n     * get configuration value\n     * \n     * @param  {string} key - Configuration key name\n     * @return {*}\n     */\n    get(key){\n      return _c[key];\n    },\n    /**\n     * Set configuration value\n     * \n     * @param {string|obj} key - Configuration key name or Object.\n     * @param void\n     */\n    set(key, val){\n      if(typeof key === 'object') for(let _k in key) this.set(_k, key[_k]);\n      _c[key] = val;\n    }\n  }\n  \n})();\n\n(()=>{\n  // let _list = {};\n  // \n  // Kensho.error = (type)=>{\n  //   let lang = Kensho.config.get('lang');\n  //   let list = _list[lang] ? _list[lang] : _list['en'];\n  //   // if(list && list[type]) console.error(list[type]);\n  // }\n  // \n  // /**\n  //  * @param  \n  //  * @return {void}\n  //  */\n  // Kensho.error.add = ()=>{\n  //   \n  // }\n  // \n  // Kensho.error.add('plugin-error', {\n  //   'ja' : '',\n  //   'en' : ''\n  // });\n\n})();\n\n(()=>{\n  let map  = new Map();\n  let _get = self => map.get(self);\n  \n  class Hook{\n    /**\n     *\n     * constructor\n     * \n     */\n    constructor(){\n      // soft private\n      map.set(this, Object.create(null));\n      let _ = _get(this);\n      _.actions = {};\n      _.filters = {};\n    }\n    /**\n     *\n     * set action/filter hook\n     * \n     * @param {string} type       - \"action\" or \"filter\"\n     * @param {string} hookName   - \n     * @param {string} callback   - \n     * @param {number} [priority] - \n     * @return {hook} this\n     */\n    add(type, hookName, callbackName, callback, priority = false){\n      let _ = _get(this);\n      let hooks;\n      switch(type){\n        case 'action' :\n          hooks = _.actions;\n          break;\n        case 'filter' :\n          hooks = _.filters;\n          break;\n      }\n      if(!hooks[hookName]) hooks[hookName] = [];\n      hooks = hooks[hookName];\n      \n      let newHook = {\n        name     : callbackName,\n        callback : callback\n      }\n      if(priority === false){\n        hooks.push(newHook);\n      }else{\n        hooks.splice(priority, 0, newHook);\n      }\n      return this;\n    }\n    /**\n     * \n     * @param  {string} type         - \n     * @param  {string} hookName     - \n     * @param  {string} callbackName - \n     * @return {hook} this\n     */\n    remove(type, hookName, callbackName){\n      let _ = _get(this);\n      let hooks;\n      let typeName;\n      switch(type){\n        case 'action' :\n          typeName = 'actions';\n          hooks = _.actions;\n          break;\n        case 'filter' :\n          typeName = 'filters';\n          break;\n      }\n      hooks = _[typeName][hookName];\n      if(hooks){\n        hooks = hooks.filter((hook)=>{\n          return hook.name !== callbackName;\n        });\n        _[typeName][hookName] = hooks;\n      }\n      return this;\n    }\n    /**\n     *\n     * Do action hook\n     * \n     * @param  {string} name       - \n     * @param  {object} [param={}] - \n     * @param  {*}      thisObject - \n     * @return {void}\n     */\n    action(name, param = {}, thisObject = this){\n      let _       = _get(this);\n      let actions = _.actions[name];\n      if(actions) actions.forEach(listener => listener.callback.call(thisObject, param));\n    }\n    /**\n     * \n     * apply filter hook\n     * \n     * @param  {string} name       - \n     * @param  {*}      data       - \n     * @param  {*}      thisObject - \n     * @return {*}\n     */\n    filter(name, data, thisObject = this){\n      let _       = _get(this);\n      let filters = _.filters[name];\n      if(filters){\n        filters.forEach((listener)=>{\n          data = listener.callback.call(thisObject, data);\n        });\n      };\n      return data;\n    }\n  }\n  Kensho.Hook = Hook;\n})();\n\n(()=>{\n  let ruleBook = {};\n  let rule = Object.create(null);\n\n  /**\n   *\n   * add validataion rule.\n   *\n   * the callback variable must return type of boolean.\n   * \n   * @param  {string}          name       - Validation rule name.\n   * @param  {function}        callback   - Rule method\n   * @param  {string|<string>} dependency - Other rule that the rule depend on.\n   * @return {object} this\n   */\n  rule.add = function(name, callback, dependency = []){\n    dependency = typeof dependency === 'string' ? [dependency] : dependency;\n    ruleBook[name] = {\n      check      : callback,\n      dependency : dependency\n    };\n  };\n\n  /**\n   * \n   * remove validation rule.\n   *\n   * @parm   {string} name - \n   * @return {object} this\n   */\n  rule.remove = function(name){\n    delete ruleBook[name];\n    return this;\n  };\n  Kensho.rule = rule;\n\n  /**\n   * \n   * return validation rule.\n   * \n   * @return {object} this\n   */\n  rule.get = (name)=> ruleBook[name];\n\n\n  Kensho.rule = rule;\n})();\n\n(()=>{\n\n  let error  = Kensho.error;\n  let plugin = Object.create(null);\n  \n  let _list  = {\n    'class'    : {},\n    'instance' : {}\n  }\n  /**\n   *\n   * addPlugin\n   * \n   * | scope argument       | class                             | instance                   |\n   * |----------------------|-----------------------------------|----------------------------|\n   * | this                 | Kensho                            | instance                   |\n   * | init. function       | once. when create first instance  | every time create instance |\n   * | to refer by instance | this.classPlugin or Kensho.plugin | this.plugin                |\n   * \n   * @param {string}   name            - Plugin name\n   * @param {function} callback        - Initialize function. Don't use arrow function.\n   * @param {object}   [param={}]      - Initialize function arguments\n   * @param {string}   [scope='class'] - 'class' or 'instance'\n   * \n   * @return {void}\n   */\n  plugin.add = function(name, callback, param = {}, scope = 'class'){\n    if(_list['class'][name] || _list['instance'][name]){\n      console.error(`plugin conflict ${name}`);\n      return false;\n    }\n    if(Kensho.isInitialize()){\n      console.error(`plug-in is must be added before create instance.`);\n      return false;\n    }\n    _list[scope][name] = {\n      param    : param,\n      scope    : scope,\n      callback : callback\n    };\n  }\n  plugin._list = _list;\n\n  Kensho.plugin = plugin;\n})();\n\n(()=>{\n  let initialized = false;\n  /**\n   * \n   */\n  Kensho.init = ()=>{\n    initialized = true;\n  };\n  /**\n   * \n   * @return {Boolean}\n   */\n  Kensho.isInitialize = ()=> initialized;\n})();\n\n(()=>{\n  let rule  = Kensho.rule;\n\n  /**\n   * required\n   */\n  rule.add('required', function(val, param){\n    return !val.trim() ? false : true;\n  });\n\n  /**\n   * @param {object} param\n   * @param {boolean} param.arrow2byte - \n   */\n  rule.add('number', function(val, param = {}){\n    let arrow2byte = param['arrow2byte'] ? param['arrow2byte'] : false;\n    console.log(this);\n    return true;\n  });\n\n})();\n\n(()=>{\n\n  /**\n   *\n   * \n   */\n  // Kensho.plugin.add('2to1', function(){\n  //   return function(){\n  //   }\n  // }, {}, 'class');\n\n\n  // Kensho.plugin.add('test1', function(){\n  //   return function(){}\n  // }, {}, 'class');\n\n  // Kensho.plugin.add('test2', function(){\n  //   console.log(this);\n  //   this.hook.add('action', 'init', 'test1', function(){\n  //     console.log(\"init\");\n  //   });\n  //   // let obj = {\n  //   //   a : 2\n  //   // }\n  //   // return function(){\n  //   //   \n  //   // }\n  // }, {}, 'instance');\n  // /**\n  //  *\n  //  * transform 2byte charactor to 1byte charactor.\n  //  * \n  //  * @param  {string} val -\n  //  * @return {string}\n  //  */\n\n  let byte_2to1 = function(val){\n  }\n  byte_2to1.addMap = (map)=>{\n    this._userMaps.push(map);\n  }\n\n  Kensho.plugin.add('2to1', function(){\n    return byte_2to1\n  }, {}, 'class');\n\n  //   let map = {};\n  //   map = Object.assign(map, {\n  //     '０' : '0', '１' : '1', '２' : '2', '３' : '3', '４' : '4',\n  //     '５' : '5', '６' : '6', '７' : '7', '８' : '8', '９' : '9'\n  //   });\n  //   map = Object.assign(map, {\n  //     'ａ' : 'a', 'ｂ' : 'b', 'ｃ' : 'c', 'ｄ' : 'd', 'ｅ' : 'e',\n  //     'ｆ' : 'f', 'ｇ' : 'g', 'ｈ' : 'h', 'ｉ' : 'i', 'ｊ' : 'j',\n  //     'ｋ' : 'k', 'ｌ' : 'l', 'ｍ' : 'm', 'ｎ' : 'n', 'ｏ' : 'o',\n  //     'ｐ' : 'p', 'ｑ' : 'q', 'ｒ' : 'r', 'ｓ' : 's', 'ｔ' : 't',\n  //     'ｕ' : 'u', 'ｖ' : 'v', 'ｗ' : 'w', 'ｘ' : 'x', 'ｙ' : 'y',\n  //     'ｚ' : 'z'\n  //   });\n  //   map = Object.assign(map, {\n  //     'Ａ' : 'A', 'Ｂ' : 'B', 'Ｃ' : 'C', 'Ｄ' : 'D', 'Ｅ' : 'E',\n  //     'Ｆ' : 'F', 'Ｇ' : 'G', 'Ｈ' : 'H', 'Ｉ' : 'I', 'Ｊ' : 'J',\n  //     'Ｋ' : 'K', 'Ｌ' : 'L', 'Ｍ' : 'M', 'Ｎ' : 'N', 'Ｏ' : 'O',\n  //     'Ｐ' : 'P', 'Ｑ' : 'Q', 'Ｒ' : 'R', 'Ｓ' : 'S', 'Ｔ' : 'T',\n  //     'Ｕ' : 'U', 'Ｖ' : 'V', 'Ｗ' : 'W', 'Ｘ' : 'X', 'Ｙ' : 'Y',\n  //     'Ｚ' : 'Z'\n  //   });\n  //   map = Object.assign(map, {\n  //     '－' : '-', '（' : '(', '）' : ')', '＿' : '_', '／' : '/',\n  //     '＋' : '+', '：' : ':', '；' : ';', '］' : ']', '［' : '[',\n  //     '＠' : '@', '！' : '!', '＜' : '<', '＞' : '>', '？' : '?',\n  //     '｛' : '{', '｝' : '}', '＊' : '*', '”' : '\"', '’' : \"'\",\n  //     '〜' : '~', '＾' : '^', '￥' : '¥', '｜' : '|', '＆' : '&',\n  //     '％' : '%', '＃' : '#', '＄' : '$', '　' : ' ', '＝' : '='\n  //   });\n  //   let result = '';\n  //   val.split('').forEach((s)=>{\n  //     s = map[s] ? map[s] : s;\n  //     result += s;\n  //   });\n  //   return result;\n  // }\n  // plugin.byte_2to1._userMaps = [];\n  // /**\n  //  *\n  //  * add user 2byte to 1byte charactors map.\n  //  * \n  //  * @param {object} map - The key is 2byte charactor. The value is 1byte charactor.\n  //  */\n  // plugin.byte_2to1.addMap = (map)=>{\n  //   this._userMaps.push(map);\n  // }\n  // \n  // let plugin = Kensho.plugin;\n})();\n"]}