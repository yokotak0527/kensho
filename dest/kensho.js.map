{"version":3,"sources":["kensho.js"],"names":["Kensho","initialized","formElement","instanceList","undefined","push","document","querySelector","console","error","rule","plugin","hook","Hook","inputs","config","get","setAttribute","classList","add","inputElement","errorElement","event","unitName","querySelectorAll","Array","prototype","map","call","v","isArray","arr","forEach","val","split","name","getAttribute","tagName","toLowerCase","type","_rule","key","param","errorMessage","unit","inputTagName","filter","i","validate","elm","addEventListener","action","hasError","result","length","allValidate","Object","keys","applyRules","verbose","wrapTag","errorClassName","innerHTML","remove","ruleName","_val","values","ruleParam","checked","value","message","createTextNode","nodeValue","replace","join","_c","errorMessageWrapper","autocomplete","HTML5novalidate","set","_k","actions","filters","hookName","callbackName","callback","priority","hooks","newCallback","splice","e","thisObject","callbacks","listener","data","create","ruleBook","list","func","requiredFunc","trimFlg","trim","fullsizeFunc","empty","is2byte","l","halfsizeFunc","is1byte","numberFunc","allow2byteFlg","allow2byte","full2half","isNaN","ageFunc","maxAge","test","emailFunc","halfsizeRule","re","blacklistFunc","reg","toString","RegExp","whitelistFunc","rangeFunc","min","max","matchFunc","filtered","_v","maps","assign","s","addMap","userMap","isNbyte","half","code","charCodeAt","f","process","require","module","exports","window"],"mappings":"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","file":"kensho.js","sourcesContent":["/**\n * HTMLフォームバリデーションクラス\n *\n * @class Kensho\n */\nlet Kensho = (()=>{\n\n    let initialized = false;\n\n    // =========================================================================\n    class Kensho{\n        /**\n         * @arg {(string|HTMLElement)} formElement\n         */\n        constructor( formElement ) {\n            if(Kensho.instanceList === undefined){\n                Kensho.instanceList = [this];\n            }else{\n                Kensho.instanceList.push( this );\n            }\n\n            formElement = typeof formElement === 'string' ? document.querySelector(formElement) : formElement;\n            if(formElement === null){\n                console.error('form not found.');\n                return false;\n            }\n\n            this.formElement = formElement;\n            this.rule        = Kensho.rule;\n            this.plugin      = Kensho.plugin;\n            this.hook        = new Kensho.Hook();\n\n            this.inputs = {};\n\n            if(Kensho.config.get('autocomplete'))\n                formElement.setAttribute('autocomplete', 'off');\n\n            formElement.classList.add('kensho-form');\n        }\n        /**\n         *  add a validate data unit.\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         * @instance\n         *\n         * @arg {(string|HTMLElement|HTMLElement[])} inputElement  - form input HTML element or its CSS selector string.\n         * @arg {(string|HTMLElement)}               errorElement  - wrapper element of output error message or its CSS selector string.\n         * @arg {Object}                             rule          - the key is rule name. The value is error message.\n         * @arg {string|string[]}                    [event=['']]  - trigger events.\n         * @arg {string}                             [unitName=''] -\n         *\n         * @return {this}\n         */\n        add(inputElement, errorElement, rule, event = [''], unitName = ''){\n            // for example, name attribute of radio buttons are seted same value.\n            // querySelector return matched first HTML element and 2nd and subsequent matched element is ignored.\n            // so, InputElement not use querySelector but use querySelectorAll.\n            // as a result of it, inputElement type is a array.\n            if( typeof inputElement === 'string' ){\n                inputElement = this.formElement.querySelectorAll(inputElement);\n                inputElement = Array.prototype.map.call(inputElement, v => v );\n            }else if( Array.isArray(inputElement) ){\n                let arr = [];\n                inputElement.forEach( val => {\n                    val = typeof val === 'string' ? this.formElement.querySelectorAll(val) : val;\n                    val = Array.prototype.map.call(val, v => v );\n                    val.forEach( v => { arr.push(v) });\n                });\n                inputElement = arr;\n            }else{\n                inputElement = Array.prototype.map.call(inputElement, v => v );\n            }\n\n            errorElement = typeof errorElement === 'string' ? this.formElement.querySelector(errorElement)    : errorElement;\n            event        = typeof event        === 'string' ? event.split('|') : !event ? [''] : event;\n\n            let name    = unitName ? unitName : inputElement[0].getAttribute('name');  // input name attr.\n            let tagName = inputElement[0].tagName.toLowerCase(); // tag name\n            let type    = null;                                  // Input type based on Kensho's own sorting rule\n            if(tagName === 'input') type = inputElement[0].getAttribute('type');\n            else type = tagName;\n\n            // the following types are handled as text type\n            switch(type){\n                case 'password' :\n                    type = 'text';\n                    break;\n                case 'search' :\n                    type = 'text';\n                    break;\n                case 'tel' :\n                    type = 'text';\n                    break;\n                case 'email' :\n                    type = 'text';\n                    break;\n                case 'url' :\n                    type = 'text';\n                    break;\n                case 'number' :\n                    type = 'text';\n                    break;\n            }\n\n            // rule data formatting.\n            let _rule = {};\n            for(let key in rule){\n                if(typeof rule[key] === 'string'){\n                    _rule[key] = {\n                        param        : {},\n                        errorMessage : rule[key]\n                    };\n                }else{\n                    _rule[key] = rule[key];\n                }\n            }\n            rule = _rule;\n\n            // set data\n            let unit = {\n                name         : name,\n                inputElement : inputElement,\n                errorElement : errorElement,\n                inputTagName : tagName,\n                type         : type,\n                rule         : rule,\n                error        : []\n            }\n\n            unit = this.hook.filter('validate-unit', unit);\n\n            this.inputs[name] = unit;\n\n            // Add event handler\n            event.forEach((name, i)=>{\n                if(name === 'init'){\n                    this.validate(unit.name);\n                }else{\n                    unit.inputElement.forEach((elm)=>{\n                        elm.addEventListener(name, ()=>{\n                            this.validate(unit.name);\n                        });\n                    });\n                }\n            });\n\n            this.hook.action('set-validate-unit', {unit : unit});\n            return this;\n        }\n        /**\n         * Return bool value that form has invalid data whether or hasn't.\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         * @instance\n         *\n         * @arg {string} [name='']\n         *\n         * @return {boolean}\n         */\n        hasError(name = ''){\n            let result = false;\n            if ( name ) {\n                return this.inputs[name].error.length !== 0;\n            } else {\n                for(let key in this.inputs){\n                    if(this.inputs[key].error.length !== 0){\n                        result = true;\n                        break;\n                    }\n                }\n                return result;\n            }\n        }\n        /**\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         * @instance\n         *\n         * @return {void}\n         */\n        allValidate(){\n            Object.keys(this.inputs).map((key, i)=>{\n                this.validate(key);\n            });\n        }\n        /**\n         * validate input values\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         * @instance\n         *\n         * @param  {string} name - name属性\n         * @return {kensho}\n         */\n        validate(name){\n            let unit           = this.inputs[name];\n            let inputElement   = unit.inputElement;\n            let applyRules     = unit.rule;\n            let verbose        = Kensho.config.get('verbose');\n            let wrapTag        = Kensho.config.get('errorMessageWrapper');\n            let errorClassName = Kensho.config.get('errorClassName');\n\n            // state reset\n            unit.errorElement.innerHTML = '';\n            unit.errorElement.classList.remove(errorClassName);\n            unit.error = [];\n            unit.inputElement.forEach( elm => {\n                elm.classList.remove('invalid');\n                elm.classList.remove('valid');\n            });\n\n            for(let ruleName in applyRules){\n                // validate\n                let _val;\n                let values    = [];\n                let ruleParam = applyRules[ruleName]['param'];\n                inputElement.filter( elm => {\n                    if( unit.type === 'radio' ){\n                        _val = elm.checked;\n                    }else if( unit.type === 'checkbox' ){\n                        _val = elm.checked;\n                    }else{\n                        _val = elm.value;\n                    }\n                    _val = this.hook.filter(`validate-val--${unit.type}`, _val);\n                    _val = this.hook.filter(`validate-val--${unit.name}`, _val);\n                    values.push(_val);\n                });\n                let result = Kensho.rule.get(ruleName)(values, ruleParam, unit.type);\n                if(!result){\n                    let message = document.createTextNode(applyRules[ruleName].errorMessage).nodeValue;\n                    message = message.replace(/\\<+script[\\s\\S]*\\/script[^>]*>/img, '');\n                    unit.error.push(`<${wrapTag} class=\"kensho-error-message\">${message}</${wrapTag}>`);\n                    if(!verbose) break;\n                }\n            }\n\n            if(unit.error.length){\n                unit.errorElement.classList.add(errorClassName);\n                unit.errorElement.innerHTML = unit.error.join('\\n');\n                unit.inputElement.forEach( elm => { elm.classList.add('invalid') });\n            }else{\n                unit.inputElement.forEach( elm => { elm.classList.add('valid') });\n            }\n            return this;\n        }\n        /**\n         * static validation.\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         *\n         * @param  {string} name       - validation rule name.\n         * @param  {any}    value      - input values.\n         * @param  {Object} [param={}] - in order to pass to a rule function.\n         *\n         * @return {boolean}\n         */\n        static validate(name, value, param = {}){\n            let rule = this.rule.get(name);\n            let result = true;\n            if(result) result = rule(value, param);\n            return result;\n        }\n    }\n    return Kensho;\n})();\n\n(()=>{\n    /**\n     * Change the behavior of Kensho.\n     *\n     * @namespace Kensho.config\n     */\n    let _c = {};\n    _c.errorMessageWrapper = 'span';\n    _c.verbose             = true;\n    _c.errorClassName      = 'kensho-has-error';\n    _c.autocomplete        = true;\n    _c.HTML5novalidate     = true;\n    // =========================================================================\n    Kensho.config = {\n        /**\n         * get configuration value\n         *\n         * @version 0.0.1\n         *\n         * @arg {string} key configuration key name\n         *\n         * @return {any}\n         */\n        get(key){\n            return _c[key];\n        },\n        /**\n         * Set configuration value\n         *\n         * @version 0.0.1\n         *\n         * @arg {(string|Object)} key   A Configuration key name or Configurations key/value Object.<br> When you pass an object, you can set a number of configurations in bluk.\n         * @arg {any}             [val] A configuration value.\n         *\n         * @example Kensho.config({\n         *     'errorMessageWrapper' : 'p', // default is 'span'\n         * });\n         *\n         * @return {void}\n         */\n        set(key, val){\n            if(typeof key === 'object') for(let _k in key) this.set(_k, key[_k]);\n            _c[key] = val;\n        }\n    }\n})();\n\n(()=>{\n    /**\n     * Hook class\n     *\n     * @class Hook\n     * @classdesc This class offer action and filter hooks function.<br>And this class not global.\n     * @see Kensho#hook\n     */\n    class Hook{\n        constructor(){\n            this.actions = {};\n            this.filters = {};\n        }\n        /**\n         * Add \"action\" or \"filter\" hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @arg {string} type          - It hook types. \"action\" or \"filter\"\n         * @arg {string} hookName      - The target hook name\n         * @arg {string} callbackName  - The callback name\n         * @arg {string} callback      -\n         * @arg {number} [priority=-1] - A priority of to act this callback\n         *\n         * @return {this}\n         */\n        add(type, hookName, callbackName, callback, priority = -1){\n            let hooks;\n\n            switch(type){\n                case 'action' :\n                    hooks = this.actions;\n                    break;\n                case 'filter' :\n                    hooks = this.filters;\n                    break;\n            }\n\n            if(!hooks[hookName]) hooks[hookName] = [];\n\n            let newCallback = {\n                name     : callbackName,\n                callback : callback\n            }\n            if(priority < 0){\n                hooks[hookName].push(newCallback);\n            }else{\n                hooks[hookName].splice(priority, 0, newCallback);\n            }\n            return this;\n        }\n        /**\n         * Remove \"action\" or \"filter\" hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} type         - It hook types. \"action\" or \"filter\"\n         * @param  {string} hookName     - the target hook name\n         * @param  {string} callbackName - callback name\n         *\n         * @return {this}\n         */\n        remove(type, hookName, callbackName){\n            let hooks;\n\n            switch(type){\n                case 'action' :\n                    hooks = this.actions;\n                    break;\n                case 'filter' :\n                    hooks = this.filters;\n                    break;\n            }\n\n            try{\n                hooks[hookName] = hooks[hookName].filter((hook)=>{\n                    return hook.name !== callbackName;\n                });\n                if(!hooks[hookName].length) delete hooks[hookName];\n            }catch(e){\n                console.error(e);\n            }\n            return this;\n        }\n        /**\n         * Do action hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} name       - hook name\n         * @param  {Object} [param={}] - in order to pass to the callbacks\n         * @param  {*}      thisObject - to bind \"this\" object. default is Hook instance\n         *\n         * @return {void}\n         */\n        action(hookName, param = {}, thisObject = this){\n            let callbacks = this.actions[hookName];\n            if(callbacks) callbacks.forEach(listener => listener.callback.call(thisObject, param));\n        }\n        /**\n         * Apply filter hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} name       - hook name\n         * @param  {*}      data       - data to be filterd\n         * @param  {*}      thisObject - to bind \"this\" object. default is Hook instance\n         *\n         * @return {*}\n         */\n        filter(hookName, data, thisObject = this){\n            let callbacks = this.filters[hookName];\n            if(callbacks){\n                callbacks.forEach((listener)=>{\n                    data = listener.callback.call(thisObject, data);\n                });\n            };\n            return data;\n        }\n    }\n    Kensho.Hook = Hook;\n})();\n\n(()=>{\n    /**\n     * @namespace Kensho.rule\n     */\n    let rule     = Object.create(null);\n    let ruleBook = {};\n\n    /**\n     * Add validation rule.<br>\n     * The Callback takes 2 arguments. A first arugment is input value. second is rule parameters.<br>\n     * The callback must return result of validated input value as boolean type.\n     *\n     * @method Kensho.rule.add\n     * @version 0.0.1\n     *\n     * @param  {string}            name     - validation rule name\n     * @param  {Function}          callback - rule method\n     * @return {void}\n     */\n    rule.add = function(name, callback){\n        ruleBook[name] = callback;\n    };\n    /**\n     * Remove validation rule.\n     *\n     * @method Kensho.rule.remove\n     * @version 0.0.1\n     *\n     * @param  {string} name validation rule name\n     * @return {Object}      this\n     */\n    rule.remove = function(name){\n        delete ruleBook[name];\n        return this;\n    };\n    /**\n     * return validation rule.\n     *\n     * @method Kensho.rule.get\n     * @version 0.0.1\n     *\n     * @param  {String} name validation rule name\n     * @return {Object}\n     */\n    rule.get = name => ruleBook[name];\n\n    Kensho.rule = rule;\n})();\n\n(()=>{\n    /**\n     * @namespace Kensho.plugin\n     */\n    let plugin = Object.create(null);\n    let list   = {};\n    /**\n     * Add plugins.<br>\n     * You have to call before the Kensho be created a instance.\n     * \n     * @method  Kensho.plugin.add\n     * @version 1.0.0\n     * \n     * @arg {string}   name       - A plugin name.\n     * @arg {Function} func       - A plugin function.\n     * @arg {Object}   [param={}] - \n     * \n     * @return {this}\n     */\n    plugin.add = function(name, func, param = {}){\n        list[name] = {\n            'name'  : name,\n            'func'  : func,\n            'param' : param\n        };\n        return this;\n    }\n    /**\n     * remove plugins.\n     * \n     * @method  Kensho.plugin.remove\n     * @version 1.0.0\n     * \n     * @arg {string} name - A plugin name.\n     * \n     * @return {this}\n     */\n    plugin.remove = function(name){\n        delete list[name];\n        return this;\n    }\n    /**\n     * get plugin function.\n     * \n     * @method  Kensho.plugin.get\n     * @version 1.0.0\n     * \n     * @arg    {string} name - \n     * @return {any}         - \n     */\n    plugin.get = function(name){\n        return list[name];\n    }\n\n    Kensho.plugin = plugin;\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(any|any[])} val                -\n     * @arg {Object}      [param={}]         -\n     * @arg {boolean}     [param.trim=false] -\n     * @arg {string}      [type='']          - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let requiredFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result;\n            if(type === 'radio' || type === 'checkbox'){\n                result = false;\n                val.forEach( v => { if(v) result = true } );\n            }else{\n                result = true;\n                val.forEach( v =>{\n                    if(!requiredFunc(v, param, type, type)) result = false;\n                });\n            }\n            return result;\n        }else{\n            let trimFlg = param.trim === true ? true : false;\n            if(typeof val === 'boolean') return val;\n            if(trimFlg) val = val.trim();\n            return val ? true : false;\n        }\n    }\n\n    Kensho.rule.add('required', requiredFunc);\n\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])} val                -\n     * @arg {Object}            [param={}]         -\n     * @arg {boolean}           [param.trim=false] -\n     * @arg {boolean}           [param.empty=true] -\n     * @arg {string}            [type='']          - input type based on Kensho's own sorting rule\n     */\n    let fullsizeFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!fullsizeFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result  = true;\n\n            let trim    = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty   = typeof param.empty === 'boolean' ? param.empty : true;\n            let is2byte = Kensho.plugin.get('is2byte');\n\n            if(trim) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            for(let i = 0, l = val.length; i < l; i++){\n                if(!is2byte.func(val[i])){\n                    result = false;\n                    break;\n                };\n            }\n            return result;\n        }\n    }\n    rule.add('fullsize', fullsizeFunc);\n\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])}  val              -\n     * @arg {Object}           [param={}]         -\n     * @arg {boolean}          [param.trim=false] -\n     * @arg {boolean}          [param.empty=true] -\n     * @arg {string}           [type='']          - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let halfsizeFunc = function(val, param = {}, type = ''){\n\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!halfsizeFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result  = true;\n\n            let trim    = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty   = typeof param.empty === 'boolean' ? param.empty : true;\n            let is1byte = Kensho.plugin.get('is1byte');\n\n            if(trim) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            for(let i = 0, l = val.length; i < l; i++){\n                if(!is1byte.func(val[i])){\n                    result = false;\n                    break;\n                };\n            }\n            return result;\n        }\n    }\n    rule.add('halfsize', halfsizeFunc);\n\n})();\n\n(()=>{\n    let rule = Kensho.rule;\n\n    /**\n     *\n     * @arg {string|string[]} val                      -\n     * @arg {Object}          [param={}]               -\n     * @arg {boolean}         [param.allow2byte=false] -\n     * @arg {boolean}         [param.trim=false]       -\n     * @arg {boolean}         [param.empty=true]       -\n     * @arg {string}          [type='']                - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let numberFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!numberFunc(v, param, type)) result = false;\n            });\n            return result;\n        } else {\n            let allow2byteFlg = typeof param.allow2byte === 'boolean' ? param.allow2byte : false;\n            let trimFlg       = typeof param.trim       === 'boolean' ? param.trim       : false;\n            let empty         = typeof param.empty      === 'boolean' ? param.empty      : true;\n            let full2half     = Kensho.plugin.get('full2half');\n\n            if(allow2byteFlg) val = full2half.func(val);\n            if(trimFlg) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            if(val.length === 0 && empty) return true;\n\n            val *= 1;\n            return isNaN(val) ? false : true;\n        }\n    }\n    rule.add('number', numberFunc);\n\n})();\n\n(()=>{\n    let rule = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])} val                      -\n     * @arg {Object}            [param={}]               -\n     * @arg {number}            [param.maxAge=125]       -\n     * @arg {boolean}           [param.allow2byte=false] -\n     * @arg {boolean}           [param.trim=false]       -\n     * @arg {boolean}           [param.empty=true]       -\n     * @arg {string}            [type='']                - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let ageFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!ageFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let maxAge        = param.maxAge ? param.maxAge : 125;\n            let allow2byteFlg = typeof param.allow2byte === 'boolean' ? param.allow2byte : false;\n            let trim          = typeof param.trim       === 'boolean' ? param.trim       : false;\n            let empty         = typeof param.empty      === 'boolean' ? param.empty      : true;\n            let full2half     = Kensho.plugin.get('full2half');\n\n            if(allow2byteFlg) val = full2half.func(val);\n            if(trim) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            if(val.length === 0 && empty) return true; // empty\n            if(!/^[0-9]+$/.test(val) || /^0/.test(val)) return false;\n            if(val > maxAge) return false; // limit\n            return true;\n        }\n    }\n    rule.add('age', ageFunc);\n\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])} val                -\n     * @arg {Object}            [param={}]         -\n     * @arg {boolean}           [param.trim=false] -\n     * @arg {boolean}           [param.empty=true] -\n     * @arg {string}            [type='']          - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let emailFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!emailFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result       = true;\n            let trim         = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty        = typeof param.empty === 'boolean' ? param.empty : true;\n            let halfsizeRule = Kensho.rule.get('halfsize');\n\n            if(trim) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            result = halfsizeRule(val, {}, type);\n            if(!result) return result;\n\n            // https://stackoverflow.com/questions/46155/how-to-validate-email-address-in-javascript\n            let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(val);\n        }\n    }\n    rule.add('email', emailFunc);\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])}     val                -\n     * @arg {Object}                [param={}]         -\n     * @arg {(string|RegExp|any[])} param.list         -\n     * @arg {boolean}               [param.trim=false] -\n     * @arg {boolean}               [param.empty=true] -\n     * @arg {string}                [type='']          - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let blacklistFunc = function(val, param, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!blacklistFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result = true;\n            let trim   = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty  = typeof param.empty === 'boolean' ? param.empty : true;\n\n            if(trim) val = val.trim();\n            if(val.length === 0) return empty ? true : false;\n            if(!param.list) return true; // do noting\n\n            param.list = Array.isArray(param.list) ? param.list : [param.list];\n\n            for(let i = 0, l = param.list.length; i < l; i++){\n                let reg;\n                if(toString.call(param.list[i]) === '[object RegExp]'){\n                    reg = param.list[i];\n                }else{\n                    reg = new RegExp(param.list[i]);\n                }\n                if(reg.test(val)){\n                    result = false;\n                    break;\n                }\n            }\n            return result;\n        }\n\n    }\n    rule.add('blacklist', blacklistFunc);\n\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])}     val                -\n     * @arg {Object}                [param={}]         -\n     * @arg {(string|RegExp|any[])} param.list         -\n     * @arg {boolean}               [param.trim=false] -\n     * @arg {boolean}               [param.empty=true] -\n     *\n     * @return {boolean}\n     */\n    let whitelistFunc = function(val, param, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!whitelistFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result = false;\n            let trim   = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty  = typeof param.empty === 'boolean' ? param.empty : true;\n\n            if(trim) val = val.trim();\n            if(val.length === 0) return empty ? true : false;\n            if(!param.list) return true; // do noting\n\n            param.list = Array.isArray(param.list) ? param.list : [param.list];\n\n            for(let i = 0, l = param.list.length; i < l; i++){\n                let reg;\n                if(toString.call(param.list[i]) === '[object RegExp]'){\n                    reg = param.list[i];\n                }else{\n                    reg = new RegExp(param.list[i]);\n                }\n                if(reg.test(val)){\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    rule.add('whitelist', whitelistFunc);\n\n})();\n\n(()=>{\n    let rule  = Kensho.rule;\n\n    /**\n     * @param {(string|string[])} val                   -\n     * @param {Object}            [param]               -\n     * @param {number}            [param.min=undefined] -\n     * @param {number}            [param.max=undefined] -\n     * @param {boolean}           [param.trim=true]     -\n     * @param {boolean}           [param.empty=true]    -\n     * @param {boolean}           [type='']             - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let rangeFunc = function(val, param = {}, type = ''){\n        if(Array.isArray(val)){\n            let result = true;\n            val.forEach( v => {\n                if(!rangeFunc(v, param, type)) result = false;\n            });\n            return result;\n        }else{\n            let result = true;\n\n            let trim  = typeof param.trim  === 'boolean' ? param.trim  : false;\n            let empty = typeof param.empty === 'boolean' ? param.empty : true;\n\n            if ( trim ) val = val.trim();\n            if ( val.length === 0 ) return empty ? true : false;\n\n            if(param.min === undefined && param.max === undefined) return true;\n\n            if(param.min === undefined && typeof param.max === 'number'){\n                if(val.length > param.max) result = false;\n            }\n            if(typeof param.min === 'number' && param.max === undefined){\n                if(val.length < param.min) result = false;\n            }\n            if(param.min !== undefined && param.max !== undefined){\n                if(val.length < param.min || val.length > param.max) result = false;\n            }\n            return result;\n        }\n    }\n    rule.add('range', rangeFunc);\n\n})();\n\n(()=>{\n    let rule = Kensho.rule;\n\n    /**\n     *\n     * @arg {(string|string[])}           val                -\n     * @arg {(string|HTMLElement|Object)} [param={}]         ~\n     * @arg {boolean}                     [param.empty=true] -\n     * @arg {string}                      [param.val='']     - fixed value\n     * @arg {string}                      [type='']          - input type based on Kensho's own sorting rule\n     *\n     * @return {boolean}\n     */\n    let matchFunc = function(val, param = {}, type = ''){\n        let empty = typeof param.empty === 'boolean' ? param.empty : true;\n\n        if ( Array.isArray(val) ) {\n            let arr      = val;\n            let v        = param.val ? param.val : arr[0];\n            let filtered = arr.filter( _v => v === _v );\n\n            if(arr.length === filtered.length){\n                if(!filtered[0].length) return empty;\n                return true;\n            }else{\n                return false;\n            }\n        }else{\n            // do noting\n            if(!param.val) return true;\n\n            if(!val.length) return empty;\n            return val === param.val ? true : false;\n        }\n    }\n    rule.add('match', matchFunc);\n\n})();\n\n(()=>{\n    let maps = {};\n    maps = Object.assign(maps, {\n        '０' : '0', '１' : '1', '２' : '2', '３' : '3', '４' : '4',\n        '５' : '5', '６' : '6', '７' : '7', '８' : '8', '９' : '9'\n    });\n    maps = Object.assign(maps, {\n        'ａ' : 'a', 'ｂ' : 'b', 'ｃ' : 'c', 'ｄ' : 'd', 'ｅ' : 'e',\n        'ｆ' : 'f', 'ｇ' : 'g', 'ｈ' : 'h', 'ｉ' : 'i', 'ｊ' : 'j',\n        'ｋ' : 'k', 'ｌ' : 'l', 'ｍ' : 'm', 'ｎ' : 'n', 'ｏ' : 'o',\n        'ｐ' : 'p', 'ｑ' : 'q', 'ｒ' : 'r', 'ｓ' : 's', 'ｔ' : 't',\n        'ｕ' : 'u', 'ｖ' : 'v', 'ｗ' : 'w', 'ｘ' : 'x', 'ｙ' : 'y',\n        'ｚ' : 'z'\n    });\n    maps = Object.assign(maps, {\n        'Ａ' : 'A', 'Ｂ' : 'B', 'Ｃ' : 'C', 'Ｄ' : 'D', 'Ｅ' : 'E',\n        'Ｆ' : 'F', 'Ｇ' : 'G', 'Ｈ' : 'H', 'Ｉ' : 'I', 'Ｊ' : 'J',\n        'Ｋ' : 'K', 'Ｌ' : 'L', 'Ｍ' : 'M', 'Ｎ' : 'N', 'Ｏ' : 'O',\n        'Ｐ' : 'P', 'Ｑ' : 'Q', 'Ｒ' : 'R', 'Ｓ' : 'S', 'Ｔ' : 'T',\n        'Ｕ' : 'U', 'Ｖ' : 'V', 'Ｗ' : 'W', 'Ｘ' : 'X', 'Ｙ' : 'Y',\n        'Ｚ' : 'Z'\n    });\n    maps = Object.assign(maps, {\n        '－' : '-', '（' : '(', '）' : ')', '＿' : '_', '／' : '/',\n        '＋' : '+', '：' : ':', '；' : ';', '］' : ']', '［' : '[',\n        '＠' : '@', '！' : '!', '＜' : '<', '＞' : '>', '？' : '?',\n        '｛' : '{', '｝' : '}', '＊' : '*', '”' : '\"', '’' : \"'\",\n        '〜' : '~', '＾' : '^', '￥' : '¥', '｜' : '|', '＆' : '&',\n        '％' : '%', '＃' : '#', '＄' : '$', '　' : ' ', '＝' : '='\n    });\n    let full2half = function(val){\n        let result = '';\n        val.split('').forEach((s)=>{\n            s = maps[s] ? maps[s] : s;\n            result += s;\n        });\n        return result;\n    }\n    full2half.addMap = (userMap)=>{\n        maps = Object.assign(maps, userMap);\n    }\n    Kensho.plugin.add('full2half', full2half);\n})();\n\n(()=>{\n\n    let isNbyte = function(half){\n        return function(val){\n            let code = val.charCodeAt(0);\n            let f    = (code >= 0x0 && code < 0x81) || (code == 0xf8f0) || (code >= 0xff61 && code < 0xffa0) || (code >= 0xf8f1 && code < 0xf8f4);\n            return !(f ^ half);\n        }\n    }\n    Kensho.plugin.add('is1byte', isNbyte(true));\n    Kensho.plugin.add('is2byte', isNbyte(false));\n\n})();\n\n// NodeJS\nif(typeof process !== \"undefined\" && typeof require !== \"undefined\"){\n  module.exports = Kensho;\n}\n// Browser\nelse{\n  window.Kensho = Kensho;\n}\n"]}