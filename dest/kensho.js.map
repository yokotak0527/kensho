{"version":3,"sources":["kensho.js"],"names":["Kensho","formElement","option","isInitialize","init","document","querySelector","rule","hook","Hook","_","Map","set","Object","create","defineProperty","enumerable","get","inputs","classList","add","inputElement","errorElement","event","param","querySelectorAll","Array","isArray","name","getAttribute","tagName","toLowerCase","type","unit","inputTagName","error","filter","forEach","i","input","validate","addEventListener","action","value","callback","console","log","innerHTML","_c","lang","errorMessageWrapper","config","key","val","_k","map","_get","self","actions","filters","hookName","callbackName","priority","hooks","newHook","push","splice","remove","typeName","thisObject","listener","call","data","plugin","ruleBook","dependency","initialized","trim"],"mappings":"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","file":"kensho.js","sourcesContent":["class Kensho{\n\n/**\n *\n * @param  {string|HTMLElement} formElement             - \n * @param  {object}             [option={}]             - \n * @param  {string}             [option.errorWrap=span] - \n * @return {Kensho}\n */\nconstructor(formElement, option = {}){\n  if(Kensho.isInitialize) Kensho.init();\n  formElement = typeof formElement === 'string' ? document.querySelector(formElement) : formElement;\n\n  this.formElement = formElement;\n  this.rule        = Kensho.rule;\n  // this.plugin      = Kensho.plugin;\n  this.hook        = new Kensho.Hook();\n  // this.plugin\n  \n  // soft private\n  this._ = new Map();\n  this._.set(this, Object.create(null));\n  Object.defineProperty(this, '_', { enumerable : false });\n  let _ = this._.get(this);\n  _.inputs = {};\n  \n\n  // console.log(form instanceof HTMLElement);\n  formElement.classList.add('kensho-form');\n\n  // this.hook.add('action', 'init', 'test1', function(){\n  //   console.log(\"1\");\n  // });\n  // this.hook.add('action', 'init', 'test2', function(){\n  //   console.log(\"2\");\n  // }).remove('action', 'init', 'test2');\n  // \n  // this.hook.action('init', function(){\n  //   console.log(this);\n  // }, {}, this);\n}\n\n\n\n\n// Kensho.addRule\n\n/**\n * \n * Add validation field.\n *\n * About of [event=['']] param.\n * it fundamentally set event.type name.\n * but, it has especial names, as follows.\n *   init - when in add() method\n * \n * @param {string|HTMLElement|array<HTMLElement>} inputElement - Form input HTML element or its CSS selector string.\n * @param {string|HTMLElement}                    errorElement - Wrapper element of output error message or its CSS selector string.\n * @param {object}                                rule         - The key is rule name. The value is error message.\n * @param {string|<string>}                       [event=['']] - trigger event.\n * @return {Kensho} this\n */\nadd(inputElement, errorElement, rule, event = [''], param = {}){\n\n  // for example, name attribute of radio buttons are seted same value.\n  // querySelector return matched first HTML element and 2nd and subsequent matched element is ignored.\n  // so, InputElement not use querySelector but use querySelectorAll.\n  // as a result of it, inputElement type is a array.\n  inputElement = typeof inputElement === 'string' ? document.querySelectorAll(inputElement) : Array.isArray(inputElement) ? inputElement : [inputElement];\n  errorElement = typeof errorElement === 'string' ? document.querySelector(errorElement) : errorElement;\n  event        = typeof event        === 'string' ? [event] : event;\n\n  let _       = this._.get(this);\n  let name    = inputElement[0].getAttribute('name');\n  let tagName = inputElement[0].tagName.toLowerCase();\n  let type    = null;\n  if(tagName === 'input') type = inputElement[0].getAttribute('type');\n  else type = tagName;\n  if(type !== 'radio') inputElement = inputElement[0];\n\n  let unit = {\n    name         : name,\n    inputElement : inputElement,\n    errorElement : errorElement,\n    inputTagName : tagName,\n    type         : type,\n    rule         : rule,\n    error        : []\n  }\n\n  unit = this.hook.filter('add-validate-filed-set-data', unit, this);\n  _.inputs[name] = unit;\n\n  // Add event handler\n  event.forEach((name, i)=>{\n    if(name === 'init'){\n      if(unit.type === 'radio'){\n        unit.inputElement.forEach((input, i)=>{\n          this.validate(unit.name);\n        });\n      }else{\n        this.validate(unit.name);\n      }\n    }else{\n      if(unit.type === 'radio'){\n        unit.inputElement.forEach((input, i)=>{\n          input.addEventListener(name, ()=>{\n            this.validate(unit.name);\n          });\n        });\n      }else{\n        unit.inputElement.addEventListener(name, ()=>{\n          this.validate(unit.name);\n        });\n      }\n    }\n  });\n\n  this.hook.action('add-validate-field', {unit : unit}, this);\n  return this;\n}\n\n/**\n * \n * validate value\n * \n * @param  {string}     name  - validation rule name.\n * @param  {string|int} value - \n * @param  {object}     param - key/value variables for callback\n * @return {boolean}\n */\nstatic validate(name, value, param = {}){\n  let rule = this.rule.get(name);\n\n  return rule.callback(value, param);\n}\n\n/**\n *\n *\n * @name   {string}\n * @name   {param}\n * @return {kensho} this\n */\nvalidate(name, param = {}){\n  console.log(\"member\");\n  let _    = this._.get(this);\n  let unit = _.inputs[name];\n\n  if(unit.type === 'text'){\n    value = unit.inputElement.value;\n  }else{\n    value = this.formElement[unit.name] ? this.formElement[unit.name] : value;\n  }\n  if(unit.type === 'textarea'){\n    // console.log();\n  }\n  \n  unit.errorElement.innerHTML = '';\n  unit.error                  = [];\n  return this;\n}\n\n}\n\n(()=>{\n  let _c = {};\n  // ===========================================================================\n  // \n  // DEFAULT CONFIGURATIONS.\n  // \n  // ===========================================================================\n  _c.lang                = 'en'; // language\n  _c.errorMessageWrapper = 'li';\n\n  Kensho.config = {\n    /**\n     * get configuration value\n     * \n     * @param  {string} key - Configuration key name\n     * @return {*}\n     */\n    get(key){\n      return _c[key];\n    },\n    /**\n     * Set configuration value\n     * \n     * @param {string|obj} key - Configuration key name or Object.\n     * @param void\n     */\n    set(key, val){\n      if(typeof key === 'object') for(let _k in key) this.set(_k, key[_k]);\n      _c[key] = val;\n    }\n  }\n  \n})();\n\n(()=>{\n  let map  = new Map();\n  let _get = self => map.get(self);\n  \n  class Hook{\n    /**\n     *\n     * constructor\n     * \n     */\n    constructor(){\n      // soft private\n      map.set(this, Object.create(null));\n      let _ = _get(this);\n      _.actions = {};\n      _.filters = {};\n    }\n    /**\n     *\n     * set action/filter hook\n     * \n     * @param {string} type       - \"action\" or \"filter\"\n     * @param {string} hookName   - \n     * @param {string} callback   - \n     * @param {number} [priority] - \n     * @return {hook} this\n     */\n    add(type, hookName, callbackName, callback, priority = false){\n      let _ = _get(this);\n      let hooks;\n      switch(type){\n        case 'action' :\n          hooks = _.actions;\n          break;\n        case 'filter' :\n          hooks = _.filters;\n          break;\n      }\n      if(!hooks[hookName]) hooks[hookName] = [];\n      hooks = hooks[hookName];\n      \n      let newHook = {\n        name     : callbackName,\n        callback : callback\n      }\n      if(priority === false){\n        hooks.push(newHook);\n      }else{\n        hooks.splice(priority, 0, newHook);\n      }\n      return this;\n    }\n    /**\n     * \n     * @param  {string} type         - \n     * @param  {string} hookName     - \n     * @param  {string} callbackName - \n     * @return {hook} this\n     */\n    remove(type, hookName, callbackName){\n      let _ = _get(this);\n      let hooks;\n      let typeName;\n      switch(type){\n        case 'action' :\n          typeName = 'actions';\n          hooks = _.actions;\n          break;\n        case 'filter' :\n          typeName = 'filters';\n          break;\n      }\n      hooks = _[typeName][hookName];\n      if(hooks){\n        hooks = hooks.filter((hook)=>{\n          return hook.name !== callbackName;\n        });\n        _[typeName][hookName] = hooks;\n      }\n      return this;\n    }\n    /**\n     *\n     * Do action hook\n     * \n     * @param  {string} name       - \n     * @param  {object} [param={}] - \n     * @param  {*}      thisObject - \n     * @return {void}\n     */\n    action(name, param = {}, thisObject = this){\n      let _       = _get(this);\n      let actions = _.actions[name];\n      if(actions) actions.forEach(listener => listener.callback.call(thisObject, param));\n    }\n    /**\n     * \n     * apply filter hook\n     * \n     * @param  {string} name       - \n     * @param  {*}      data       - \n     * @param  {*}      thisObject - \n     * @return {*}\n     */\n    filter(name, data, thisObject = this){\n      let _       = _get(this);\n      let filters = _.filters[name];\n      if(filters){\n        filters.forEach((listener)=>{\n          data = listener.callback.call(thisObject, data);\n        });\n      };\n      return data;\n    }\n  }\n  Kensho.Hook = Hook;\n})();\n\n(()=>{\n  let plugin = Object.create(null);\n  Kensho.plugin = plugin;\n})();\n\n(()=>{\n  let ruleBook = {};\n  let rule = Object.create(null);\n\n  /**\n   *\n   * add validataion rule.\n   *\n   * the callback variable must return type of boolean.\n   * \n   * @param  {string}          name       - Validation rule name.\n   * @param  {function}        callback   - Rule method\n   * @param  {string|<string>} dependency - Other rule that the rule depend on.\n   * @return {object} this\n   */\n  rule.add = function(name, callback, dependency = []){\n    dependency = typeof dependency === 'string' ? [dependency] : dependency;\n    ruleBook[name] = {\n      callback   : callback,\n      dependency : dependency\n    };\n  };\n\n  /**\n   * \n   * remove validation rule.\n   *\n   * @parm   {string} name - \n   * @return {object} this\n   */\n  rule.remove = function(name){\n    delete ruleBook[name];\n    return this;\n  };\n  Kensho.rule = rule;\n\n  /**\n   * \n   * return validation rule.\n   * \n   * @return {object} this\n   */\n  rule.get = (name)=> ruleBook[name];\n\n\n  Kensho.rule = rule;\n})();\n\n(()=>{\n  let initialized = false;\n  /**\n   * \n   */\n  Kensho.init = ()=>{\n    initialized = true;\n  };\n  /**\n   * \n   * @return {Boolean}\n   */\n  Kensho.isInitialize = ()=> initialized;\n})();\n\n(()=>{\n  let rule  = Kensho.rule;\n\n  /**\n   * required\n   */\n  rule.add('required', function(val, param){\n    return !val.trim() ? false : true;\n  });\n\n})();\n"]}