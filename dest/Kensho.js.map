{"version":3,"sources":["kensho.js"],"names":["Kensho","initialized","initialize","console","log","formElement","instanceList","undefined","call","push","document","querySelector","error","rule","plugin","hook","Hook","inputs","config","get","setAttribute","classList","add","inputElement","errorElement","event","querySelectorAll","Array","isArray","split","name","getAttribute","tagName","toLowerCase","type","_rule","key","param","errorMessage","unit","inputTagName","filter","_","forEach","i","input","validate","addEventListener","e","action","hasError","result","length","allValidate","Object","keys","map","applyRules","verbose","wrapTag","errorClassName","value","innerHTML","remove","message","createTextNode","nodeValue","replace","join","l","dependency","check","_c","errorMessageWrapper","autocomplete","HTML5novalidate","set","val","_k","actions","filters","hookName","callbackName","callback","priority","hooks","newCallback","splice","thisObject","callbacks","listener","data","create","ruleBook","_list","process","require","module","exports","window"],"mappings":"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","file":"kensho.js","sourcesContent":["/**\n * HTMLフォームバリデーションクラス\n *\n * @class Kensho\n */\nlet Kensho = (()=>{\n\n    let initialized = false;\n    let initialize = function(){\n        if(initialized) return false;\n        initialized = true;\n\n        console.log(this);\n    }\n\n    // =========================================================================\n    class Kensho{\n        /**\n         * @arg {(string|HTMLElement)} formElement\n         */\n        constructor( formElement ) {\n            if(Kensho.instanceList === undefined){\n                Kensho.instanceList = [this];\n                initialize.call(this);\n            }else{\n                Kensho.instanceList.push( this );\n            }\n\n            formElement = typeof formElement === 'string' ? document.querySelector(formElement) : formElement;\n            if(formElement === null){\n                console.error('form not found.');\n                return false;\n            }\n\n            this.formElement = formElement;\n            this.rule        = Kensho.rule;\n            this.plugin      = Kensho.plugin;\n            this.hook        = new Kensho.Hook();\n\n            this.inputs = {};\n\n            if(Kensho.config.get('autocomplete'))\n                formElement.setAttribute('autocomplete', 'off');\n\n            formElement.classList.add('kensho-form');\n        }\n        /**\n         *  検証対象(input)を追加する\n         *\n         * @version 0.0.1\n         * @memberof Kensho\n         * @instance\n         *\n         * @arg {(string|HTMLElement|HTMLElement[])} inputElement form input HTML element or its CSS selector string.\n         * @arg {(string|HTMLElement)}               errorElement wrapper element of output error message or its CSS selector string.\n         * @arg {Object}                             rule         the key is rule name. The value is error message.\n         * @arg {string|string[]}                    [event=['']] trigger events.\n         *\n         * @return {kensho}                                         instance\n         */\n         add(inputElement, errorElement, rule, event = ['']){\n            // for example, name attribute of radio buttons are seted same value.\n            // querySelector return matched first HTML element and 2nd and subsequent matched element is ignored.\n            // so, InputElement not use querySelector but use querySelectorAll.\n            // as a result of it, inputElement type is a array.\n            inputElement = typeof inputElement === 'string' ? document.querySelectorAll(inputElement) : Array.isArray(inputElement) ? inputElement : [inputElement];\n            errorElement = typeof errorElement === 'string' ? document.querySelector(errorElement) : errorElement;\n            event        = typeof event        === 'string' ? event.split('|') : event;\n\n            let name    = inputElement[0].getAttribute('name');\n            let tagName = inputElement[0].tagName.toLowerCase();\n            let type    = null;\n            if(tagName === 'input') type = inputElement[0].getAttribute('type');\n            else type = tagName;\n\n            // the following types are handled as text type\n            switch(type){\n              case 'password' :\n                type = 'text';\n                break;\n              case 'search' :\n                type = 'text';\n                break;\n              case 'tel' :\n                type = 'text';\n                break;\n              case 'email' :\n                type = 'text';\n                break;\n              case 'url' :\n                type = 'text';\n                break;\n              case 'number' :\n                type = 'text';\n                break;\n            }\n\n        if(type !== 'radio') inputElement = inputElement[0];\n\n        let _rule = {};\n        for(let key in rule){\n          if(typeof rule[key] === 'string'){\n            _rule[key] = {\n              param        : {},\n              errorMessage : rule[key]\n            };\n          }else{\n            _rule[key] = rule[key];\n          }\n        }\n        rule = _rule;\n\n        let unit = {\n          name         : name,\n          inputElement : inputElement,\n          errorElement : errorElement,\n          inputTagName : tagName,\n          type         : type,\n          rule         : rule,\n          error        : []\n        }\n\n        unit = this.hook.filter('validate-filed', unit, this);\n        _.inputs[name] = unit;\n\n        // Add event handler\n        event.forEach((name, i)=>{\n          if(name === 'init'){\n            if(unit.type === 'radio'){\n              unit.inputElement.forEach((input, i)=>{\n                this.validate(unit.name);\n              });\n            }else{\n              this.validate(unit.name);\n            }\n          }else{\n            if(unit.type === 'radio'){\n              unit.inputElement.forEach((input, i)=>{\n                input.addEventListener(name, ()=>{\n                  this.validate(unit.name);\n                });\n              });\n            }else{\n              unit.inputElement.addEventListener(name, ()=>{\n                this.validate(unit.name);\n              });\n            }\n          }\n        });\n\n        // console.log(inputElement.getAttribute('type'));\n        if(inputElement.getAttribute('type') === 'email'){\n          inputElement.addEventListener('change', function(e){\n            // e.preventDefault();\n            console.log(e);\n          });\n        }\n\n        this.hook.action('set-validate-field', {unit : unit}, this);\n        return this;\n      }\n      /**\n       *\n       *\n       *\n       * @method Kensho#hasError\n       *\n       * @return {Boolean}\n       */\n      hasError(){\n        let _      = this._.get(this);\n        let result = false;\n        for(let key in _.inputs){\n          if(_.inputs[key].error.length !== 0){\n            result = true;\n            break;\n          }\n        }\n        return result;\n      }\n      /**\n       *\n       *\n       *\n       * @method Kensho#allValidate\n       *\n       * @return {void}\n       */\n      allValidate(){\n        let _ = this._.get(this);\n        Object.keys(_.inputs).map((key, i)=>{\n          this.validate(key);\n        });\n      }\n      /**\n       *\n       *\n       *\n       * @method  Kensho#validate\n       * @version 0.0.1\n       *\n       * @param  {String} name       - name属性\n       * @return {kensho} instance\n       */\n      validate(name){\n        let _              = this._.get(this);\n        let unit           = _.inputs[name];\n        let applyRules     = unit.rule;\n        let verbose        = Kensho.config.get('verbose');\n        let wrapTag        = Kensho.config.get('errorMessageWrapper');\n        let errorClassName = Kensho.config.get('errorClassName');\n\n        if(unit.type === 'text'){\n          value = unit.inputElement.value;\n        }else{\n          value = this.formElement[unit.name] ? this.formElement[unit.name] : value;\n        }\n        // console.log(value);\n        if(unit.type === 'textarea'){\n          // console.log();\n        }\n\n        unit.errorElement.innerHTML = '';\n        unit.errorElement.classList.remove(errorClassName);\n        unit.error                  = [];\n        // if(Kensho.config.get('validationPseudoClass')) unit.inputElement.setCustomValidity('');\n        unit.inputElement.classList.remove('invalid');\n        unit.inputElement.classList.remove('valid');\n\n        value = this.hook.filter('pre-validate-value', value, this);\n\n        for(let key in applyRules){\n          let result = Kensho.validate.call(this, key, value, applyRules[key].param);\n          if(!result){\n            let message = document.createTextNode(applyRules[key].errorMessage).nodeValue;\n            message = message.replace(/\\<+script[\\s\\S]*\\/script[^>]*>/img, '');\n            unit.error.push(`<${wrapTag} class=\"kensho-error-message\">${message}</${wrapTag}>`);\n            if(!verbose) break;\n          }\n        }\n        if(unit.error.length){\n          unit.errorElement.classList.add(errorClassName);\n          unit.errorElement.innerHTML = unit.error.join('\\n');\n          unit.inputElement.classList.add('invalid');\n        }else{\n          unit.inputElement.classList.add('valid');\n        }\n        return this;\n      }\n      /**\n       * validate\n       *\n       * @method  Kensho.validate\n       * @version 0.0.1\n       *\n       * @param  {String} name       validation rule name.\n       * @param  {*}      value      input value.\n       * @param  {Object} [param={}] in order to pass to a rule function.\n       * @return {Boolean}           value is valid or invalid\n       */\n      static validate(name, value, param = {}){\n        let rule   = this.rule.get(name);\n        let result = true;\n        for(let i = 0, l = rule.dependency.length; i < l; i++){\n          result = Kensho.rule.get(rule.dependency[i]).check(value, param);\n          if(!result) break;\n        }\n        if(result) result = rule.check(value, param);\n        return result;\n      }\n    }\n    return Kensho;\n})();\n\n(()=>{\n    /**\n     * Change the behavior of Kensho.\n     *\n     * @namespace Kensho.config\n     */\n    let _c = {};\n    _c.errorMessageWrapper = 'span';\n    _c.verbose             = true;\n    _c.errorClassName      = 'kensho-has-error';\n    _c.autocomplete        = true;\n    _c.HTML5novalidate     = true;\n    // =========================================================================\n    Kensho.config = {\n        /**\n         * get configuration value\n         *\n         * @version 0.0.1\n         *\n         * @arg {string} key configuration key name\n         *\n         * @return {any}\n         */\n        get(key){\n            return _c[key];\n        },\n        /**\n         * Set configuration value\n         *\n         * @version 0.0.1\n         *\n         * @arg {(string|Object)} key   A Configuration key name or Configurations key/value Object.<br> When you pass an object, you can set a number of configurations in bluk.\n         * @arg {any}             [val] A configuration value.\n         *\n         * @example Kensho.config({\n         *     'errorMessageWrapper' : 'p', // default is 'span'\n         * });\n         *\n         * @return {void}\n         */\n        set(key, val){\n            if(typeof key === 'object') for(let _k in key) this.set(_k, key[_k]);\n            _c[key] = val;\n        }\n    }\n})();\n\n(()=>{\n    /**\n     * Hook class\n     *\n     * @class Hook\n     * @classdesc This class offer action and filter hooks function.<br>And this class not global.\n     * @see Kensho#hook\n     */\n    class Hook{\n        constructor(){\n            this.actions = {};\n            this.filters = {};\n        }\n        /**\n         * Add \"action\" or \"filter\" hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @arg {string} type          - It hook types. \"action\" or \"filter\"\n         * @arg {string} hookName      - The target hook name\n         * @arg {string} callbackName  - The callback name\n         * @arg {string} callback      -\n         * @arg {number} [priority=-1] - A priority of to act this callback\n         *\n         * @return {this}\n         */\n        add(type, hookName, callbackName, callback, priority = -1){\n            let hooks;\n\n            switch(type){\n                case 'action' :\n                    hooks = this.actions;\n                    break;\n                case 'filter' :\n                    hooks = this.filters;\n                    break;\n            }\n\n            if(!hooks[hookName]) hooks[hookName] = [];\n\n            let newCallback = {\n                name     : callbackName,\n                callback : callback\n            }\n            if(priority < 0){\n                hooks[hookName].push(newCallback);\n            }else{\n                hooks[hookName].splice(priority, 0, newCallback);\n            }\n            return this;\n        }\n        /**\n         * Remove \"action\" or \"filter\" hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} type         - It hook types. \"action\" or \"filter\"\n         * @param  {string} hookName     - the target hook name\n         * @param  {string} callbackName - callback name\n         *\n         * @return {this}\n         */\n        remove(type, hookName, callbackName){\n            let hooks;\n\n            switch(type){\n                case 'action' :\n                    hooks = this.actions;\n                    break;\n                case 'filter' :\n                    hooks = this.filters;\n                    break;\n            }\n\n            try{\n                hooks[hookName] = hooks[hookName].filter((hook)=>{\n                    return hook.name !== callbackName;\n                });\n                if(!hooks[hookName].length) delete hooks[hookName];\n            }catch(e){\n                console.error(e);\n            }\n            return this;\n        }\n        /**\n         * Do action hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} name       - hook name\n         * @param  {Object} [param={}] - in order to pass to the callbacks\n         * @param  {*}      thisObject - to bind \"this\" object. default is Hook instance\n         *\n         * @return {void}\n         */\n        action(hookName, param = {}, thisObject = this){\n            let callbacks = this.actions[hookName];\n            if(callbacks) callbacks.forEach(listener => listener.callback.call(thisObject, param));\n        }\n        /**\n         * Apply filter hooks.\n         *\n         * @version 0.0.1\n         * @memberof Hook\n         * @instance\n         *\n         * @param  {string} name       - hook name\n         * @param  {*}      data       - data to be filterd\n         * @param  {*}      thisObject - to bind \"this\" object. default is Hook instance\n         *\n         * @return {*}\n         */\n        filter(hookName, data, thisObject = this){\n            let callbacks = this.filters[hookName];\n            if(callbacks){\n                callback.forEach((listener)=>{\n                    data = listener.callback.call(thisObject, data);\n                });\n            };\n            return data;\n        }\n    }\n    Kensho.Hook = Hook;\n})();\n\n(()=>{\n    /**\n     * @namespace Kensho.rule\n     */\n    let rule     = Object.create(null);\n    let ruleBook = {};\n\n    /**\n     * Add validation rule.<br>\n     * The Callback takes 2 arguments. A first arugment is input value. second is rule parameters.<br>\n     * The callback must return result of validated input value as boolean type.\n     *\n     * @method Kensho.rule.add\n     * @version 0.0.1\n     *\n     * @param  {string}            name       - validation rule name\n     * @param  {Function}          callback   - rule method.\n     * @param  {(string|string[])} dependency - other rule that this rule depend on\n     * @return {void}\n     */\n    rule.add = function(name, callback, dependency = []){\n        dependency = typeof dependency === 'string' ? [dependency] : dependency;\n        ruleBook[name] = {\n            check      : callback,\n            dependency : dependency\n        };\n    };\n    /**\n     * Remove validation rule.\n     *\n     * @method Kensho.rule.remove\n     * @version 0.0.1\n     *\n     * @param  {string} name validation rule name\n     * @return {Object}      this\n     */\n    rule.remove = function(name){\n        delete ruleBook[name];\n        return this;\n    };\n    /**\n     * return validation rule.\n     *\n     * @method Kensho.rule.get\n     * @version 0.0.1\n     *\n     * @param  {String} name validation rule name\n     * @return {Object}\n     */\n    rule.get = name => ruleBook[name];\n\n    Kensho.rule = rule;\n})();\n\n(()=>{\n    /**\n     * @namespace Kensho.plugin\n     */\n    let plugin = Object.create(null);\n    let _list  = {};\n    /**\n     * Add plugins.\n     *\n     * @method  Kensho.plugin.add\n     * @version 0.0.1\n     *\n     * @param  {string}   name       A plugin name.\n     * @param  {Function} callback   A plugin initialize function.\n     * @param  {Object}   [param={}] Paramerters in order to pass to the initialize function.\n     * @return {void}\n     */\n    plugin.add = function(name, callback, param = {}){\n//     if(Kensho.isInitialize()){\n//       console.error(`plug-in is must be added before create instance.`);\n//       return false;\n//     }\n//     Kensho.plugin[name] = callback;\n//     // _list[name] = {\n//     //   param    : param,\n//     //   callback : callback\n//     // };\n    }\n    // plugin._list = _list;\n\n    Kensho.plugin = plugin;\n})();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}  val\n//    * @param {Object}  [param={}]\n//    * @param {Boolean} [param.trim=false]\n//    */\n//   Kensho.rule.add('required', function(val, param = {}){\n//     let trimFlg = param.trim === true ? true : false;\n//\n//     if ( val instanceof HTMLElement ) {\n//       let tagName = val.tagName.toLowerCase();\n//       // checkbox support\n//       if( tagName === 'input' && val.getAttribute('type') === 'checkbox' ){\n//         return val.checked;\n//       }\n//     } else {\n//         if(trimFlg) val = val.trim();\n//\n//         return val ? true : false;\n//     }\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String} val\n//    * @param {Object} [param={}]\n//    */\n//   rule.add('fullsize', function(val, param = {}){\n//     let result = true;\n//\n//     for(let i = 0, l = val.length; i < l; i++){\n//       if(!Kensho.plugin.is2byte(val[i])){\n//         result = false;\n//         break;\n//       };\n//     }\n//     return result;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String} val\n//    * @param {Object} [param={}]\n//    */\n//   rule.add('halfsize', function(val, param = {}){\n//     let result = true;\n//\n//     for(let i = 0, l = val.length; i < l; i++){\n//       if(!Kensho.plugin.is1byte(val[i])){\n//         result = false;\n//         break;\n//       };\n//     }\n//     return result;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}  val\n//    * @param {Object}  [param={}]\n//    * @param {Boolean} [param.allow2byte=false]\n//    * @param {Boolean} [param.trim=false]\n//    */\n//   rule.add('number', function(val, param = {}){\n//     let allow2byteFlg = param.allow2byte === true ? true : false;\n//     let trimFlg       = param.trim       === true ? true : false;\n//\n//     if(allow2byteFlg) val = Kensho.plugin.full2half(val);\n//     if(trimFlg) val = val.trim();\n//\n//     if(!/^[0-9]*$/.test(val)) return false;\n//     return true;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}  val\n//    * @param {Object}  [param={}]\n//    * @param {Boolean} [param.allow2byte=false]\n//    * @param {Number}  [param.maxAge=125]\n//    * @param {Boolean} [param.trim=false]\n//    */\n//   rule.add('age', function(val, param = {}){\n//     let maxAge        = param.maxAage             ? param.maxAage : 125;\n//     let allow2byteFlg = param.allow2byte === true ? true : false;\n//     let trimFlg       = param.trim       === true ? true : false;\n//\n//     if(allow2byteFlg) val = Kensho.plugin.full2half(val);\n//     if(trimFlg) val = val.trim();\n//\n//     if(!/^[0-9]{1,3}$/.test(val)) return false;          // ex. a1,1234, -5\n//     if(val.length !== 1 && /^0/.test(val)) return false; // first number is 0\n//     if(val > maxAge) return false;                       // limit\n//     return true;\n//   }, ['number']);\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String} val\n//    * @param {Object} [param={}]\n//    */\n//   rule.add('email', function(val, param = {}){\n//     // https://stackoverflow.com/questions/46155/how-to-validate-email-address-in-javascript\n//     let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     return re.test(val);\n//   }, ['halfsize']);\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}   val\n//    * @param {Object}   param\n//    * @param {String[]} param.list\n//    */\n//   rule.add('blacklist', function(val, param){\n//     let result = true;\n//     if(!param.list) return result;\n//\n//     for(let i = 0, l = param.list.length; i < l; i++){\n//       if(val === param.list[i]){\n//         result = false;\n//         break;\n//       }\n//     }\n//     return result;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}   val\n//    * @param {Object}   param\n//    * @param {String[]} param.list\n//    */\n//   rule.add('whitelist', function(val, param){\n//     let result = false;\n//     if(!param.list) return result;\n//\n//     for(let i = 0, l = param.list.length; i < l; i++){\n//       if(val === param.list[i]){\n//         result = true;\n//         break;\n//       }\n//     }\n//     return result;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}   val\n//    * @param {Object}   [param]\n//    * @param {Number}   [param.min]\n//    * @param {Number}   [param.max]\n//    * @param {Boolean}  [param.trim=true]\n//    * @param {Boolean}  [param.undefinedThrough=false]\n//    */\n//   rule.add('range', function(val, param = {}){\n//     let result           = true;\n//     let trimFlg          = param.trim === true ? true : false;\n//     let undefinedThrough = param.undefinedThrough === true ? true : false;\n//     if(trimFlg) val = val.trim();\n//     if ( undefinedThrough && val.length === 0 ) return true;\n//\n//     if(param.min === undefined && param.max === undefined) return result;\n//\n//     if(param.min === undefined && typeof param.max === 'number'){\n//       if(val.length > param.max) result = false;\n//     }\n//     if(typeof param.min === 'number' && param.max === undefined){\n//       if(val.length < param.min) result = false;\n//     }\n//     if(param.min !== undefined && param.max !== undefined){\n//       if(val.length < param.min || val.length > param.max) result = false;\n//     }\n//     return result;\n//   });\n//\n// })();\n\n// (()=>{\n//   let rule  = Kensho.rule;\n//\n//   /**\n//    * @param {String}       val\n//    * @param {String|HTML}  param\n//    */\n//   rule.add('match', function(val, param){\n//     param = typeof param === 'string' ? document.querySelector(param) : param;\n//     return param.value === val;\n//   });\n//\n// })();\n\n// (()=>{\n//     let maps = {};\n//     maps = Object.assign(maps, {\n//         '０' : '0', '１' : '1', '２' : '2', '３' : '3', '４' : '4',\n//         '５' : '5', '６' : '6', '７' : '7', '８' : '8', '９' : '9'\n//     });\n//     maps = Object.assign(maps, {\n//         'ａ' : 'a', 'ｂ' : 'b', 'ｃ' : 'c', 'ｄ' : 'd', 'ｅ' : 'e',\n//         'ｆ' : 'f', 'ｇ' : 'g', 'ｈ' : 'h', 'ｉ' : 'i', 'ｊ' : 'j',\n//         'ｋ' : 'k', 'ｌ' : 'l', 'ｍ' : 'm', 'ｎ' : 'n', 'ｏ' : 'o',\n//         'ｐ' : 'p', 'ｑ' : 'q', 'ｒ' : 'r', 'ｓ' : 's', 'ｔ' : 't',\n//         'ｕ' : 'u', 'ｖ' : 'v', 'ｗ' : 'w', 'ｘ' : 'x', 'ｙ' : 'y',\n//         'ｚ' : 'z'\n//     });\n//     maps = Object.assign(maps, {\n//         'Ａ' : 'A', 'Ｂ' : 'B', 'Ｃ' : 'C', 'Ｄ' : 'D', 'Ｅ' : 'E',\n//         'Ｆ' : 'F', 'Ｇ' : 'G', 'Ｈ' : 'H', 'Ｉ' : 'I', 'Ｊ' : 'J',\n//         'Ｋ' : 'K', 'Ｌ' : 'L', 'Ｍ' : 'M', 'Ｎ' : 'N', 'Ｏ' : 'O',\n//         'Ｐ' : 'P', 'Ｑ' : 'Q', 'Ｒ' : 'R', 'Ｓ' : 'S', 'Ｔ' : 'T',\n//         'Ｕ' : 'U', 'Ｖ' : 'V', 'Ｗ' : 'W', 'Ｘ' : 'X', 'Ｙ' : 'Y',\n//         'Ｚ' : 'Z'\n//     });\n//     maps = Object.assign(maps, {\n//         '－' : '-', '（' : '(', '）' : ')', '＿' : '_', '／' : '/',\n//         '＋' : '+', '：' : ':', '；' : ';', '］' : ']', '［' : '[',\n//         '＠' : '@', '！' : '!', '＜' : '<', '＞' : '>', '？' : '?',\n//         '｛' : '{', '｝' : '}', '＊' : '*', '”' : '\"', '’' : \"'\",\n//         '〜' : '~', '＾' : '^', '￥' : '¥', '｜' : '|', '＆' : '&',\n//         '％' : '%', '＃' : '#', '＄' : '$', '　' : ' ', '＝' : '='\n//     });\n//     let full2half = function(val){\n//         let result = '';\n//         val.split('').forEach((s)=>{\n//             s = maps[s] ? maps[s] : s;\n//             result += s;\n//         });\n//         return result;\n//     }\n//     full2half.addMap = (userMap)=>{\n//         maps = Object.assign(maps, userMap);\n//     }\n//     Kensho.plugin.add('full2half', full2half);\n// })();\n\n// (()=>{\n//\n//   isNbyte = function(half){\n//     return function(val){\n//       let code = val.charCodeAt(0);\n//       let f    = (code >= 0x0 && code < 0x81) || (code == 0xf8f0) || (code >= 0xff61 && code < 0xffa0) || (code >= 0xf8f1 && code < 0xf8f4);\n//       return !(f ^ half);\n//     }\n//   }\n//\n//   Kensho.plugin.add('is1byte', isNbyte(true));\n//\n//   Kensho.plugin.add('is2byte', isNbyte(false));\n//\n// })();\n\n// NodeJS\nif(typeof process !== \"undefined\" && typeof require !== \"undefined\"){\n  module.exports = Kensho;\n}\n// Browser\nelse{\n  window.Kensho = Kensho;\n}\n"]}